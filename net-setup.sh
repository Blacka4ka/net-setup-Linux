#!/bin/bash
# universal-net-setup.sh ‚Äî –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ä–µ–∂—ñ –∑ –±–µ–∫–∞–ø–æ–º

BACKUP_DIR="/root/net-backup-$(date +%F_%H-%M-%S)"
mkdir -p "$BACKUP_DIR"

clear
echo "--------------------------------------"
echo "=== –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–µ—Ä–µ–∂—ñ ==="

if systemctl is-active --quiet NetworkManager; then
    NET_CTRL="NetworkManager"
elif systemctl is-active --quiet systemd-networkd; then
    NET_CTRL="systemd-networkd"
elif command -v netplan &>/dev/null; then
    NET_CTRL="netplan"
else
    echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –º–µ—Ä–µ–∂—ñ!"
    exit 1
fi

echo "‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è: $NET_CTRL"
echo "--------------------------------------"

echo "=== –ü–æ—à—É–∫ –Ω–∞—è–≤–Ω–∏—Ö IP —É –∫–æ–Ω—Ñ—ñ–≥–∞—Ö ==="
if [[ "$NET_CTRL" == "NetworkManager" ]]; then
    for con in $(nmcli -t -f NAME con show | grep -v '^lo$'); do
        ip_info=$(nmcli -g IP4.ADDRESS con show "$con" 2>/dev/null)
        gw_info=$(nmcli -g IP4.GATEWAY con show "$con" 2>/dev/null)
        dns_info=$(nmcli -g IP4.DNS con show "$con" 2>/dev/null | paste -sd "," -)
        echo "–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: $con"
        echo "  IP: ${ip_info:-–Ω–µ–º–∞—î}"
        echo "  GW: ${gw_info:-–Ω–µ–º–∞—î}"
        echo "  DNS: ${dns_info:-–Ω–µ–º–∞—î}"
    done
elif [[ "$NET_CTRL" == "netplan" || "$NET_CTRL" == "systemd-networkd" ]]; then
    grep -R "address\|addresses\|gateway\|nameserver" /etc/netplan 2>/dev/null || echo "IP —É netplan –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
fi
echo "--------------------------------------"

read -rp "–í–∏–¥–∞–ª–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–º—ñ–Ω–æ—é? (y/n): " CLEAR_CONF
if [[ "$CLEAR_CONF" =~ ^[Yy]$ ]]; then
    echo "üì¶ –†–æ–±–∏–º–æ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é —É: $BACKUP_DIR"
    case $NET_CTRL in
        NetworkManager)
            cp -a /etc/NetworkManager "$BACKUP_DIR/" 2>/dev/null
            for c in $(nmcli -t -f NAME con show | grep -v '^lo$'); do
                nmcli con delete "$c" >/dev/null 2>&1
            done
            ;;
        netplan|systemd-networkd)
            cp -a /etc/netplan "$BACKUP_DIR/" 2>/dev/null
            sudo rm -f /etc/netplan/*.yaml
            ;;
    esac
    echo "‚úÖ –°—Ç–∞—Ä—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω—ñ —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω—ñ"
fi
echo "--------------------------------------"

interfaces=($(ip -o link show | awk -F': ' '{print $2}' | grep -v lo))

echo "=== –°—Ç–∞–Ω —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ ==="
for iface in "${interfaces[@]}"; do
    link_state=$(cat /sys/class/net/$iface/carrier 2>/dev/null)
    link_text=$([[ "$link_state" == "1" ]] && echo "‚úÖ –ö–∞–±–µ–ª—å" || echo "‚ùå –ù–µ–º–∞—î –ª—ñ–Ω–∫—É")
    ips=$(ip -4 addr show "$iface" | awk '/inet /{print $2}' | paste -sd "," -)
    gw=$(ip route show dev "$iface" | awk '/default/ {print $3}')
    dns=$(grep "nameserver" /etc/resolv.conf | awk '{print $2}' | paste -sd "," -)
    echo "  - $iface : $link_text , IP: ${ips:-–Ω–µ–º–∞—î} , GW: ${gw:-–Ω–µ–º–∞—î} , DNS: ${dns:-–Ω–µ–º–∞—î}"
done
echo "--------------------------------------"

read -rp "–í–∏–±—Ä–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ (–∑ –ª—ñ–Ω–∫–æ–º)? (y/n): " auto_iface
if [[ "$auto_iface" =~ ^[Yy]$ ]]; then
    selected_iface=""
    for iface in "${interfaces[@]}"; do
        if [[ "$(cat /sys/class/net/$iface/carrier 2>/dev/null)" == "1" ]]; then
            selected_iface=$iface
            break
        fi
    done
else
    read -rp "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É: " selected_iface
fi

if [[ -z "$selected_iface" ]]; then
    echo "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É."
    exit 1
fi

echo "–í–∏–±—Ä–∞–Ω–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $selected_iface"
echo "--------------------------------------"

read -rp "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ DHCP —á–∏ –°—Ç–∞—Ç–∏—á–Ω–∏–π? (dhcp/static): " mode

if [[ "$NET_CTRL" == "NetworkManager" ]]; then
    echo "‚öô –ö–µ—Ä—É—î–º–æ —á–µ—Ä–µ–∑ nmcli..."
    nmcli con add type ethernet ifname "$selected_iface" con-name "$selected_iface" >/dev/null 2>&1 || true
    if [[ "$mode" == "dhcp" ]]; then
        sudo nmcli con mod "$selected_iface" ipv4.method auto ipv4.addresses "" ipv4.gateway "" ipv4.dns ""
    else
        while true; do
            read -rp "–í–≤–µ–¥—ñ—Ç—å IP/–º–∞—Å–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 192.168.1.10/24): " IPADDR
            [[ "$IPADDR" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$ ]] && break
            echo "‚ùå –§–æ—Ä–º–∞—Ç –Ω–µ–≤—ñ—Ä–Ω–∏–π!"
        done
        read -rp "–í–≤–µ–¥—ñ—Ç—å —à–ª—é–∑: " GATEWAY
        read -rp "–í–≤–µ–¥—ñ—Ç—å DNS —á–µ—Ä–µ–∑ –∫–æ–º—É: " DNS
        sudo nmcli con mod "$selected_iface" ipv4.method manual ipv4.addresses "$IPADDR" ipv4.gateway "$GATEWAY" ipv4.dns "$DNS"
    fi
    sudo nmcli con up "$selected_iface"
else
    echo "‚öô –ö–µ—Ä—É—î–º–æ —á–µ—Ä–µ–∑ netplan..."
    NETPLAN_FILE="/etc/netplan/01-netcfg.yaml"
    if [[ "$mode" == "dhcp" ]]; then
        cat <<EOF | sudo tee $NETPLAN_FILE > /dev/null
network:
  version: 2
  ethernets:
    $selected_iface:
      dhcp4: true
EOF
    else
        while true; do
            read -rp "–í–≤–µ–¥—ñ—Ç—å IP/–º–∞—Å–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 192.168.1.10/24): " IPADDR
            [[ "$IPADDR" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$ ]] && break
            echo "‚ùå –§–æ—Ä–º–∞—Ç –Ω–µ–≤—ñ—Ä–Ω–∏–π!"
        done
        read -rp "–í–≤–µ–¥—ñ—Ç—å —à–ª—é–∑: " GATEWAY
        read -rp "–í–≤–µ–¥—ñ—Ç—å DNS —á–µ—Ä–µ–∑ –∫–æ–º—É: " DNS
        cat <<EOF | sudo tee $NETPLAN_FILE > /dev/null
network:
  version: 2
  ethernets:
    $selected_iface:
      addresses: [$IPADDR]
      routes:
        - to: default
          via: $GATEWAY
      nameservers:
        addresses: [${DNS//,/ }]
EOF
    fi
    sudo chmod 600 $NETPLAN_FILE
    sudo netplan apply
fi

echo "--------------------------------------"
echo "=== –ù–æ–≤–∏–π —Å—Ç–∞–Ω —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É $selected_iface ==="
ip addr show $selected_iface
ip route show dev $selected_iface
echo "--------------------------------------"
echo "üì¶ –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è –∫–æ–Ω—Ñ—ñ–≥—ñ–≤ –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —É: $BACKUP_DIR"
